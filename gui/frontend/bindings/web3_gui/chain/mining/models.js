// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Â MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import { Create as $Create } from "@wailsio/runtime";

/**
 * token信息
 */
export class TokenInfoV0 {
    /**
     * Creates a new TokenInfoV0 instance.
     * @param {Partial<TokenInfoV0>} [$$source = {}] - The source object to create the TokenInfoV0.
     */
    constructor($$source = {}) {
        if (!("Owner" in $$source)) {
            /**
             * 拥有者
             * @member
             * @type {string}
             */
            this["Owner"] = "";
        }
        if (!("TokenId" in $$source)) {
            /**
             * 发布交易地址
             * @member
             * @type {string}
             */
            this["TokenId"] = "";
        }
        if (!("Name" in $$source)) {
            /**
             * 名称（全称）
             * @member
             * @type {string}
             */
            this["Name"] = "";
        }
        if (!("Symbol" in $$source)) {
            /**
             * 单位
             * @member
             * @type {string}
             */
            this["Symbol"] = "";
        }
        if (!("Accuracy" in $$source)) {
            /**
             * 小数点之后位数
             * @member
             * @type {number}
             */
            this["Accuracy"] = 0;
        }
        if (!("Supply" in $$source)) {
            /**
             * 发行总量
             * @member
             * @type {string}
             */
            this["Supply"] = "";
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new TokenInfoV0 instance from a string or object.
     * @param {any} [$$source = {}]
     * @returns {TokenInfoV0}
     */
    static createFrom($$source = {}) {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new TokenInfoV0(/** @type {Partial<TokenInfoV0>} */($$parsedSource));
    }
}
