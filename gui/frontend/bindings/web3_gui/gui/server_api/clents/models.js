// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Â MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import { Create as $Create } from "@wailsio/runtime";

export class NameinfoVO {
    /**
     * Creates a new NameinfoVO instance.
     * @param {Partial<NameinfoVO>} [$$source = {}] - The source object to create the NameinfoVO.
     */
    constructor($$source = {}) {
        if (!("name" in $$source)) {
            /**
             * 域名
             * @member
             * @type {string}
             */
            this["name"] = "";
        }
        if (!("owner" in $$source)) {
            /**
             * 拥有者
             * @member
             * @type {string}
             */
            this["owner"] = "";
        }
        if (!("netIds" in $$source)) {
            /**
             * 节点地址
             * @member
             * @type {string[]}
             */
            this["netIds"] = [];
        }
        if (!("addrCoins" in $$source)) {
            /**
             * 钱包收款地址
             * @member
             * @type {string[]}
             */
            this["addrCoins"] = [];
        }
        if (!("height" in $$source)) {
            /**
             * 注册区块高度，通过现有高度计算出有效时间
             * @member
             * @type {number}
             */
            this["height"] = 0;
        }
        if (!("nameOfValidity" in $$source)) {
            /**
             * 有效块数量
             * @member
             * @type {number}
             */
            this["nameOfValidity"] = 0;
        }
        if (!("deposit" in $$source)) {
            /**
             * 冻结金额
             * @member
             * @type {number}
             */
            this["deposit"] = 0;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new NameinfoVO instance from a string or object.
     * @param {any} [$$source = {}]
     * @returns {NameinfoVO}
     */
    static createFrom($$source = {}) {
        const $$createField2_0 = $$createType0;
        const $$createField3_0 = $$createType0;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("netIds" in $$parsedSource) {
            $$parsedSource["netIds"] = $$createField2_0($$parsedSource["netIds"]);
        }
        if ("addrCoins" in $$parsedSource) {
            $$parsedSource["addrCoins"] = $$createField3_0($$parsedSource["addrCoins"]);
        }
        return new NameinfoVO(/** @type {Partial<NameinfoVO>} */($$parsedSource));
    }
}

export class RespSendToAddress {
    /**
     * Creates a new RespSendToAddress instance.
     * @param {Partial<RespSendToAddress>} [$$source = {}] - The source object to create the RespSendToAddress.
     */
    constructor($$source = {}) {
        if (!("GasUsed" in $$source)) {
            /**
             * @member
             * @type {number}
             */
            this["GasUsed"] = 0;
        }
        if (!("vot" in $$source)) {
            /**
             * @member
             * @type {(Vout | null)[]}
             */
            this["vot"] = [];
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new RespSendToAddress instance from a string or object.
     * @param {any} [$$source = {}]
     * @returns {RespSendToAddress}
     */
    static createFrom($$source = {}) {
        const $$createField1_0 = $$createType3;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("vot" in $$parsedSource) {
            $$parsedSource["vot"] = $$createField1_0($$parsedSource["vot"]);
        }
        return new RespSendToAddress(/** @type {Partial<RespSendToAddress>} */($$parsedSource));
    }
}

export class Vout {
    /**
     * Creates a new Vout instance.
     * @param {Partial<Vout>} [$$source = {}] - The source object to create the Vout.
     */
    constructor($$source = {}) {
        if (!("value" in $$source)) {
            /**
             * 输出金额 = 实际金额* 100000000
             * @member
             * @type {number}
             */
            this["value"] = 0;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new Vout instance from a string or object.
     * @param {any} [$$source = {}]
     * @returns {Vout}
     */
    static createFrom($$source = {}) {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new Vout(/** @type {Partial<Vout>} */($$parsedSource));
    }
}

// Private type creation functions
const $$createType0 = $Create.Array($Create.Any);
const $$createType1 = Vout.createFrom;
const $$createType2 = $Create.Nullable($$createType1);
const $$createType3 = $Create.Array($$createType2);
