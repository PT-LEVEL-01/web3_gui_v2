// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Â MODIWL
// This file is automatically generated. DO NOT EDIT

/**
 * App struct
 * @module
 */

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import { Call as $Call, CancellablePromise as $CancellablePromise, Create as $Create } from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as model$0 from "../../chain_boot/model/models.js";
// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as clents$0 from "./clents/models.js";
// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as engine$0 from "../../libp2parea/v2/engine/models.js";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as $models from "./models.js";

/**
 * @param {string} group
 * @returns {$CancellablePromise<void>}
 */
export function AddGroup(group) {
    return $Call.ByID(1064005193, group);
}

/**
 * @param {$models.Peer | null} p
 * @returns {$CancellablePromise<$models.Peer | null>}
 */
export function AddPeer(p) {
    return $Call.ByID(805388646, p).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType1($result);
    }));
}

/**
 * 社区向轻节点分账
 * @srcAddress  string       是社区节点/轻节点地址
 * @gas         uint64       手续费
 * @gasPrice    uint64       手续费
 * @pwd         string       密码
 * @payload     string       备注
 * @param {string} srcAddress
 * @param {number} gas
 * @param {number} gasPrice
 * @param {string} pwd
 * @param {string} payload
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Chain_CommunityDistribute(srcAddress, gas, gasPrice, pwd, payload) {
    return $Call.ByID(2126293821, srcAddress, gas, gasPrice, pwd, payload).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 导出助记词
 * @pwd              string    密码
 * @param {string} pwd
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Chain_ExportKey(pwd) {
    return $Call.ByID(3554943562, pwd).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 获取候选见证人列表
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Chain_GetCandidateList() {
    return $Call.ByID(3094388512).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 获取收款地址列表
 * @token_id    string    币种ID，用于查询token余额
 * @page        uint      分页查询的页数
 * @count       uint      每页显示数量
 * @param {string} token_id
 * @param {number} page
 * @param {number} count
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Chain_GetCoinAddress(token_id, page, count) {
    return $Call.ByID(2587682914, token_id, page, count).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 获取社区节点列表
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Chain_GetCommunityList() {
    return $Call.ByID(2768888568).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 检查IM模块信息
 * @returns {$CancellablePromise<model$0.Getinfo | null>}
 */
export function Chain_GetInfo() {
    return $Call.ByID(1656275475).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType4($result);
    }));
}

/**
 * 获取域名列表
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Chain_GetNames() {
    return $Call.ByID(928081157).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 获取自己的投票列表
 * 获得自己给哪些见证人/社区投过票的列表
 * @voteType    int    投票类型，1=给见证人投票；2=给社区节点投票；3=轻节点押金；
 * @param {number} voteType
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Chain_GetVoteList(voteType) {
    return $Call.ByID(2146709543, voteType).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 查询自己是否是见证人
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Chain_GetWitnessInfo() {
    return $Call.ByID(2275773562).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 导入助记词
 * @pwd              string    密码
 * @param {string} words
 * @param {string} pwd
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Chain_ImportKey(words, pwd) {
    return $Call.ByID(3019146579, words, pwd).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 域名注册，修改，续期
 * @srcAddr          string    扣款地址
 * @dstAddr          string    收款地址
 * @amount           uint64    转账金额
 * @gas              uint64    手续费
 * @frozenHeight     uint64    有效高度
 * @pwd              string    密码
 * @comment          string    备注
 * @name             string    域名
 * @netIds           []string  网络地址
 * @addrCoins        []string  收款地址
 * @param {string} srcAddr
 * @param {string} dstAddr
 * @param {number} amount
 * @param {number} gas
 * @param {number} frozenHeight
 * @param {string} pwd
 * @param {string} comment
 * @param {string} name
 * @param {string[]} netIds
 * @param {string[]} addrCoins
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Chain_NameIn(srcAddr, dstAddr, amount, gas, frozenHeight, pwd, comment, name, netIds, addrCoins) {
    return $Call.ByID(3363126569, srcAddr, dstAddr, amount, gas, frozenHeight, pwd, comment, name, netIds, addrCoins).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 域名注销
 * @srcAddr          string    扣款地址
 * @dstAddr          string    收款地址
 * @amount           uint64    转账金额
 * @gas              uint64    手续费
 * @frozenHeight     uint64    有效高度
 * @pwd              string    密码
 * @comment          string    备注
 * @name             string    域名
 * @netIds           []string  网络地址
 * @addrCoins        []string  收款地址
 * @param {string} srcAddr
 * @param {string} dstAddr
 * @param {number} amount
 * @param {number} gas
 * @param {number} frozenHeight
 * @param {string} pwd
 * @param {string} comment
 * @param {string} name
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Chain_NameOut(srcAddr, dstAddr, amount, gas, frozenHeight, pwd, comment, name) {
    return $Call.ByID(1641077674, srcAddr, dstAddr, amount, gas, frozenHeight, pwd, comment, name).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 创建新地址
 * @pwd    string    创建新地址
 * @param {string} password
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Chain_NewCoinAddress(password) {
    return $Call.ByID(220799224, password).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * @srcAddr          string    扣款地址
 * @dstAddr          string    收款地址
 * @amount           uint64    转账金额
 * @gas              uint64    手续费
 * @frozenHeight     uint64    有效高度
 * @pwd              string    密码
 * @comment          string    备注
 * @tokenID          string    tokenID
 * @param {string} srcAddr
 * @param {string} dstAddr
 * @param {number} amount
 * @param {number} gas
 * @param {number} frozenHeight
 * @param {string} pwd
 * @param {string} comment
 * @param {string} tokenID
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Chain_TokenPay(srcAddr, dstAddr, amount, gas, frozenHeight, pwd, comment, tokenID) {
    return $Call.ByID(3178269268, srcAddr, dstAddr, amount, gas, frozenHeight, pwd, comment, tokenID).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 发布一个token
 * @srcAddr          string    扣款地址
 * @ownerAddr        string    拥有者
 * @gas              uint64    手续费
 * @pwd              string    密码
 * @comment          string    备注
 * @name             string    token名称
 * @symbol           string    token单位
 * @supply           string    token发行总量
 * @param {string} srcAddr
 * @param {string} ownerAddr
 * @param {number} gas
 * @param {string} pwd
 * @param {string} comment
 * @param {string} name
 * @param {string} $symbol
 * @param {string} supply
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Chain_TokenPublish(srcAddr, ownerAddr, gas, pwd, comment, name, $symbol, supply) {
    return $Call.ByID(3616222377, srcAddr, ownerAddr, gas, pwd, comment, name, $symbol, supply).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 成为社区节点押金，成为轻节点押金，投票
 * @voteType    int          投票类型 1=给见证人投票；2=给社区节点投票；3=轻节点押金；
 * @address     string       记票地址
 * @witness     string       给谁投票
 * @rate        int          见证人奖励比例 1-100
 * @amount      uint64       投票数量
 * @gas         uint64       手续费
 * @gasPrice    uint64       手续费
 * @pwd         string       密码
 * @payload     string       备注
 * @param {number} voteType
 * @param {string} address
 * @param {string} witness
 * @param {number} rate
 * @param {number} amount
 * @param {number} gas
 * @param {number} gasPrice
 * @param {string} pwd
 * @param {string} payload
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Chain_VoteIn(voteType, address, witness, rate, amount, gas, gasPrice, pwd, payload) {
    return $Call.ByID(4140935438, voteType, address, witness, rate, amount, gas, gasPrice, pwd, payload).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 取消投票，取消押金
 * @voteType    int          投票类型 1=给见证人投票；2=给社区节点投票；3=轻节点押金；
 * @address     string       记票地址
 * @amount      uint64       投票数量
 * @gas         uint64       手续费
 * @gasPrice    uint64       手续费
 * @pwd         string       密码
 * @payload     string       备注
 * @param {number} voteType
 * @param {string} address
 * @param {number} amount
 * @param {number} gas
 * @param {number} gasPrice
 * @param {string} pwd
 * @param {string} payload
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Chain_VoteOut(voteType, address, amount, gas, gasPrice, pwd, payload) {
    return $Call.ByID(410385199, voteType, address, amount, gas, gasPrice, pwd, payload).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 缴纳押金，成为见证人
 * @amount    uint64    押金
 * @gas       uint64    手续费
 * @pwd       uint64    密码
 * @payload   string    见证人名称
 * @rate      uint16    分配比例
 * @param {number} amount
 * @param {number} gas
 * @param {string} pwd
 * @param {string} payload
 * @param {number} rate
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Chain_WitnessDepositIn(amount, gas, pwd, payload, rate) {
    return $Call.ByID(2068129733, amount, gas, pwd, payload, rate).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 获取收款地址列表
 * @srcAddr          string    扣款地址
 * @dstAddr          string    收款地址
 * @amount           uint64    转账金额
 * @gas              uint64    手续费
 * @frozenHeight     uint64    有效高度
 * @pwd              string    密码
 * @comment          string    备注
 * @param {string} srcAddr
 * @param {string} dstAddr
 * @param {number} amount
 * @param {number} gas
 * @param {number} frozenHeight
 * @param {string} pwd
 * @param {string} comment
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Chain_pay(srcAddr, dstAddr, amount, gas, frozenHeight, pwd, comment) {
    return $Call.ByID(420955753, srcAddr, dstAddr, amount, gas, frozenHeight, pwd, comment).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 检查密码是否正确
 * @param {string} pwd
 * @returns {$CancellablePromise<boolean>}
 */
export function CheckPassword(pwd) {
    return $Call.ByID(3949522984, pwd);
}

/**
 * 检查并更新版本
 * @return    bool      是否有新版本
 * @return    bool      是否需要重启
 * @return    string    新版本名称
 * @return    int       新版本编号
 * @returns {$CancellablePromise<$models.VersionUpdateInfo>}
 */
export function CheckUpdateVersion() {
    return $Call.ByID(3552126168).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType5($result);
    }));
}

/**
 * 查询好友博客圈子列表
 * @param {string} addrStr
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Circle_FindClassNames(addrStr) {
    return $Call.ByID(1464071115, addrStr).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 查询广播中收集的博客
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Circle_FindClassNamesMulticast() {
    return $Call.ByID(454433603).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 查询广播中的博客，指定的一个分类博客列表
 * @param {string} className
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Circle_FindClassNamesMulticastNewsList(className) {
    return $Call.ByID(1147625192, className).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 查询类别
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Circle_FindNewsClass() {
    return $Call.ByID(842887468).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 查询草稿箱中的新闻
 * @param {string} className
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Circle_FindNewsDraft(className) {
    return $Call.ByID(180153383, className).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 查询我的发布中的新闻
 * @param {string} className
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Circle_FindNewsRelease(className) {
    return $Call.ByID(2096196569, className).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 保存类别
 * @param {string} className
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Circle_SaveNewsClass(className) {
    return $Call.ByID(3711735586, className).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 保存到草稿列表
 * @param {string} className
 * @param {string} title
 * @param {string} content
 * @param {string} indexBsStr
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Circle_SaveNewsDraft(className, title, content, indexBsStr) {
    return $Call.ByID(1373224017, className, title, content, indexBsStr).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 保存到发布列表
 * @param {string} className
 * @param {string} title
 * @param {string} content
 * @param {string} indexBsStr
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Circle_SaveNewsRelease(className, title, content, indexBsStr) {
    return $Call.ByID(2725557427, className, title, content, indexBsStr).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * @param {string} id
 * @param {string} srcaddress
 * @param {number} gas
 * @param {string} pwd
 * @returns {$CancellablePromise<void>}
 */
export function CommunityDistribute(id, srcaddress, gas, pwd) {
    return $Call.ByID(2314640047, id, srcaddress, gas, pwd);
}

/**
 * @param {string} group
 * @returns {$CancellablePromise<void>}
 */
export function DelGroup(group) {
    return $Call.ByID(3276896519, group);
}

/**
 * @param {string} id
 * @returns {$CancellablePromise<void>}
 */
export function DelPeer(id) {
    return $Call.ByID(1959640008, id);
}

/**
 * @param {string} id
 * @param {number} amount
 * @param {number} gas
 * @param {number} rate
 * @param {string} pwd
 * @param {string} payload
 * @returns {$CancellablePromise<void>}
 */
export function Depositin(id, amount, gas, rate, pwd, payload) {
    return $Call.ByID(1316270684, id, amount, gas, rate, pwd, payload);
}

/**
 * @param {string} id
 * @param {string} witnessAddr
 * @param {number} amount
 * @param {number} gas
 * @param {string} pwd
 * @returns {$CancellablePromise<void>}
 */
export function Depositout(id, witnessAddr, amount, gas, pwd) {
    return $Call.ByID(301016873, id, witnessAddr, amount, gas, pwd);
}

/**
 * @param {string} group
 * @param {string} old
 * @returns {$CancellablePromise<void>}
 */
export function EditGroup(group, old) {
    return $Call.ByID(3742558134, group, old);
}

/**
 * @param {$models.Peer | null} p
 * @returns {$CancellablePromise<$models.Peer | null>}
 */
export function EditPeer(p) {
    return $Call.ByID(4209261103, p).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType1($result);
    }));
}

/**
 * 添加共享目录
 * @param {string} dirPath
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function File_AddSharebox(dirPath) {
    return $Call.ByID(52414353, dirPath).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 删除一个下载任务
 * @param {number} pullTaskID
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function File_DelDownload(pullTaskID) {
    return $Call.ByID(1727119851, pullTaskID).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 删除共享目录
 * @param {string} dirPath
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function File_DelSharebox(dirPath) {
    return $Call.ByID(177214659, dirPath).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 获取共享目录列表
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function File_GetShareboxList() {
    return $Call.ByID(3238172818).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 打开目录对话框
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function File_OpenDirectoryDialog() {
    return $Call.ByID(2071250881).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 打开多文件选择对话框
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function File_OpenMultipleFilesDialog() {
    return $Call.ByID(1077443769).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 继续一个下载任务
 * @param {number} pullTaskID
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function File_StartDownload(pullTaskID) {
    return $Call.ByID(2171088350, pullTaskID).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 暂停一个下载任务
 * @param {number} pullTaskID
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function File_StopDownload(pullTaskID) {
    return $Call.ByID(3454118150, pullTaskID).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 下载文件
 * @param {string} addrStr
 * @param {string} filePath
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function File_download(addrStr, filePath) {
    return $Call.ByID(1682314878, addrStr, filePath).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 查询消息历史记录
 * @startIndex    string    查询消息范围起始index，首次查询传空字符串
 * @count         uint64    查询消息条数
 * @remoteAddr    string    查询的好友地址
 * @param {string} startIndex
 * @param {number} count
 * @param {string} remoteAddr
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function GetChatHistory(startIndex, count, remoteAddr) {
    return $Call.ByID(2326438477, startIndex, count, remoteAddr).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 查看文件下载列表
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function GetFileDownloadList() {
    return $Call.ByID(820326135).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * @param {string} id
 * @returns {$CancellablePromise<(clents$0.NameinfoVO | null)[]>}
 */
export function GetNames(id) {
    return $Call.ByID(1698537943, id).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType8($result);
    }));
}

/**
 * 获取本节点网络地址和连接的其他节点信息
 * @returns {$CancellablePromise<$models.NetWorkinfo | null>}
 */
export function GetNetwork() {
    return $Call.ByID(1891701405).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType10($result);
    }));
}

/**
 * @param {string} id
 * @param {string} pwd
 * @returns {$CancellablePromise<void>}
 */
export function GetNewAddress(id, pwd) {
    return $Call.ByID(4140180151, id, pwd);
}

/**
 * @returns {$CancellablePromise<{ [_: string]: string }>}
 */
export function GetPeerGroup() {
    return $Call.ByID(2859810296).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType11($result);
    }));
}

/**
 * @returns {$CancellablePromise<($models.Peer | null)[]>}
 */
export function GetPeerList() {
    return $Call.ByID(845230285).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType12($result);
    }));
}

/**
 * 屏幕快照
 * @isMini    bool    窗口是否最小化
 * @param {boolean} isMini
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function GetScreenShot(isMini) {
    return $Call.ByID(1581647129, isMini).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 查询版本号
 * @returns {$CancellablePromise<[string, number]>}
 */
export function GetVersion() {
    return $Call.ByID(3974177167);
}

/**
 * 查询是否有
 * @returns {$CancellablePromise<engine$0.PostResult>}
 */
export function HaveWalletKey() {
    return $Call.ByID(1326317275).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType13($result);
    }));
}

/**
 * 获取离线服务节点列表
 * @price     uint64    月租
 * @open      bool      是否开启服务
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function IMProxyClient_GetProxyList() {
    return $Call.ByID(3487244197).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 添加存储目录
 * @param {string} dir
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function IMProxyServer_AddDirectory(dir) {
    return $Call.ByID(106828571, dir).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 删除存储目录
 * @param {string} dir
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function IMProxyServer_DelDirectory(dir) {
    return $Call.ByID(2912990733, dir).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 查询本代理节点信息
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function IMProxyServer_GetProxyInfo() {
    return $Call.ByID(3672552285).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 获取自己订单中云存储服务器列表
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function IMProxyServer_GetStorageServiceList() {
    return $Call.ByID(1799659515).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 打开或关闭代理服务器
 * @param {boolean} isOpen
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function IMProxyServer_SetOpen(isOpen) {
    return $Call.ByID(2728127819, isOpen).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 设置本节点离线服务
 * 设置本节点存储空间单价和空间限制
 * @priceUnit     uint64   //单价 单位：1G
 * @selling       uint64   //售卖总容量 单位：1G
 * @userFreelimit uint64   //用户空闲空间限制,用户只能购买这么多剩余空间，当空间不够时才能继续购买 单位：1G
 * @userCanTotal  uint64   //每个用户可以购买的空间总量 单位：1G
 * @useTimeMax    uint64   //每个订单租用时间最大值 单位：天
 * @renewalTime   uint64   //续费时间，订单到期前多少天可以开始续费。等于0时，不能再续费了 单位：天
 * @param {string} nickName
 * @param {number} priceUnit
 * @param {number} selling
 * @param {number} userFreelimit
 * @param {number} userCanTotal
 * @param {number} useTimeMax
 * @param {number} renewalTime
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function IMProxyServer_SetProxyInfo(nickName, priceUnit, selling, userFreelimit, userCanTotal, useTimeMax, renewalTime) {
    return $Call.ByID(317005705, nickName, priceUnit, selling, userFreelimit, userCanTotal, useTimeMax, renewalTime).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 设置本节点正在销售的存储空间
 * @selling    int64    要添加或减少的存储空间
 * @param {number} selling
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function IMProxyServer_SetSelling(selling) {
    return $Call.ByID(569048957, selling).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 添加好友
 * @addrStr    string    好友地址
 * @param {string} addrStr
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function IM_AddFriend(addrStr) {
    return $Call.ByID(3336978769, addrStr).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 同意好友申请
 * @tokenStr    string    申请记录令牌
 * @param {string} tokenStr
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function IM_AgreeApplyFriend(tokenStr) {
    return $Call.ByID(764714170, tokenStr).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 删除好友
 * @addrStr    string    好友地址
 * @param {string} addrStr
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function IM_DelFriend(addrStr) {
    return $Call.ByID(1014248399, addrStr).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 查询好友基本信息
 * @addrStr    string    好友地址
 * @param {string} addrStr
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function IM_GetFriendInfo(addrStr) {
    return $Call.ByID(2947040722, addrStr).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 好友列表
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function IM_GetFriendList() {
    return $Call.ByID(558723718).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 检查IM模块信息
 * @returns {$CancellablePromise<boolean>}
 */
export function IM_GetInfo() {
    return $Call.ByID(184179166);
}

/**
 * 接收消息
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function IM_GetMsg() {
    return $Call.ByID(997861323).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 获取好友申请列表
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function IM_GetNewFriend() {
    return $Call.ByID(3250684384).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 获取自己的信息
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function IM_GetSelfInfo() {
    return $Call.ByID(1510494564).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 查询好友的共享文件
 * @addrStr    string    好友地址
 * @dirPath    string    目录路径
 * @param {string} addrStr
 * @param {string} dirPath
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function IM_GetShareboxList(addrStr, dirPath) {
    return $Call.ByID(4279975630, addrStr, dirPath).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 通知取消闪烁
 * @param {string} key
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function IM_NoticeCancelFlicker(key) {
    return $Call.ByID(2879868868, key).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 检查IM模块信息
 * @param {any} itr
 * @returns {$CancellablePromise<void>}
 */
export function IM_PrintLog(itr) {
    return $Call.ByID(1856427921, itr);
}

/**
 * 删除所有聊天消息历史记录
 * @param {string} remoteAddr
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function IM_RemoveChatHistoryAll(remoteAddr) {
    return $Call.ByID(3224594211, remoteAddr).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 搜索好友基本信息
 * @addrStr    string    好友地址
 * @param {string} addrStr
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function IM_SearchFriendInfo(addrStr) {
    return $Call.ByID(2546010550, addrStr).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 发送文本消息
 * @content    string    发送内容
 * @toAddr     string    好友地址
 * @quoteID    string    引用内容id
 * @param {string} content
 * @param {string} toAddr
 * @param {string} quoteID
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function IM_SendMsg(content, toAddr, quoteID) {
    return $Call.ByID(2269637489, content, toAddr, quoteID).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 重发文本消息
 * @fromAddr    string    发送者
 * @toAddr      string    接收者
 * @sendID      string    消息发送id
 * @param {string} fromAddr
 * @param {string} toAddr
 * @param {string} sendID
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function IM_SendMsgAgain(fromAddr, toAddr, sendID) {
    return $Call.ByID(2013357459, fromAddr, toAddr, sendID).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 发送文本消息
 * @param {string} content
 * @param {string} toAddr
 * @param {string} quoteID
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function IM_SendMsg_old(content, toAddr, quoteID) {
    return $Call.ByID(85785943, content, toAddr, quoteID).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 设置好友昵称备注
 * @param {string} addrStr
 * @param {string} remarksname
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function IM_SetFriendRemarksname(addrStr, remarksname) {
    return $Call.ByID(890708700, addrStr, remarksname).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 设置自己的信息
 * @nickname      string    //昵称
 * @headNum       uint64    //头像编号，外部预设编号及含义。
 * @traySwitch    bool      //PC端是否打开系统托盘
 * @param {string} nickname
 * @param {number} headNum
 * @param {boolean} traySwitch
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function IM_SetSelfInfo(nickname, headNum, traySwitch) {
    return $Call.ByID(2821352648, nickname, headNum, traySwitch).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 启动IM模块
 * @param {string} passwd
 * @param {boolean} init
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function IM_StartIm(passwd, init) {
    return $Call.ByID(2827057020, passwd, init).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 等待IM模块完成
 * @param {string} passwd
 * @param {boolean} init
 * @returns {$CancellablePromise<string>}
 */
export function IM_StartIm_wait(passwd, init) {
    return $Call.ByID(1172982420, passwd, init);
}

/**
 * 创建一个群
 * @nickname     string    群名称
 * @proxyAddr    string    代理节点地址，没有代理传空字符串
 * @shoutUp      bool      是否禁言
 * @param {string} nickname
 * @param {string} proxyAddr
 * @param {boolean} shoutUp
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function ImProxyClient_CreateGroup(nickname, proxyAddr, shoutUp) {
    return $Call.ByID(333152748, nickname, proxyAddr, shoutUp).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 解散一个群
 * @groupId    string      群id
 * @param {string} groupId
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function ImProxyClient_DissolveGroup(groupId) {
    return $Call.ByID(2688774869, groupId).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 获取自己创建的群列表
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function ImProxyClient_GetCreateGroupList() {
    return $Call.ByID(3756811466).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 获取群成员
 * @groupId    string    群id
 * @param {string} groupId
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function ImProxyClient_GetGroupMembers(groupId) {
    return $Call.ByID(262398761, groupId).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 获取代理节点租用订单
 * @serverAddr    uint64     //代理节点地址
 * @spaceTotal    uint64     //购买空间数量
 * @useTime       uint64     //空间使用时间 单位：1天
 * @param {string} serverAddr
 * @param {number} spaceTotal
 * @param {number} useTime
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function ImProxyClient_GetOrder(serverAddr, spaceTotal, useTime) {
    return $Call.ByID(2585845825, serverAddr, spaceTotal, useTime).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 获取订单列表
 * @param {string} startNumber16
 * @param {number} limit
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function ImProxyClient_GetOrderList(startNumber16, limit) {
    return $Call.ByID(4118704973, startNumber16, limit).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 订单续费
 * @serverAddr    uint64     //存储提供商地址
 * @spaceTotal    uint64     //购买空间数量
 * @useTime       uint64     //空间使用时间 单位：1天
 * @param {string} preNumber
 * @param {string} serverAddr
 * @param {number} useTime
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function ImProxyClient_GetRenewalOrders(preNumber, serverAddr, useTime) {
    return $Call.ByID(2729719220, preNumber, serverAddr, useTime).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 接受群邀请
 * @groupId      string      群id
 * @addrStr      string      群管理员地址
 * @param {string} tokenStr
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function ImProxyClient_GroupAccept(tokenStr) {
    return $Call.ByID(1205133228, tokenStr).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 同意添加人入群聊
 * @groupIdStr    string      群id
 * @addrStr       string      添加的新成员地址
 * @param {string} tokenStr
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function ImProxyClient_GroupAddMember(tokenStr) {
    return $Call.ByID(708151149, tokenStr).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 申请加入群聊
 * @nickname    string    群名称
 * @shoutUp     bool      是否禁言
 * @param {string} groupId
 * @param {string} addrStr
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function ImProxyClient_GroupApply(groupId, addrStr) {
    return $Call.ByID(2380207608, groupId, addrStr).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 踢人出群
 * @groupIdStr    string      群id
 * @addrStr       string      添加的新成员地址
 * @param {string} groupId
 * @param {string[]} addrStr
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function ImProxyClient_GroupDelMember(groupId, addrStr) {
    return $Call.ByID(3949385367, groupId, addrStr).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 群邀请新人
 * @groupId      string        群id
 * @addrStr      []string      邀请的成员地址
 * @param {string} groupId
 * @param {string[]} addrStr
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function ImProxyClient_GroupInvitation(groupId, addrStr) {
    return $Call.ByID(2540181131, groupId, addrStr).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 群发送文件
 * @groupIdStr     string    群地址
 * @filePath       string    文件路径
 * @param {string} groupIdStr
 * @param {string} filePath
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function ImProxyClient_GroupSendFiles(groupIdStr, filePath) {
    return $Call.ByID(1820867821, groupIdStr, filePath).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 群发送图片
 * @groupIdStr     string    群地址
 * @imgBase64      string    图片base64编码
 * @param {string} groupIdStr
 * @param {string} imgBase64
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function ImProxyClient_GroupSendImage(groupIdStr, imgBase64) {
    return $Call.ByID(4271068063, groupIdStr, imgBase64).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 发送群消息
 * @groupId    string      群id
 * @content    string      消息内容
 * @quoteID    string      引用内容id
 * @param {string} groupId
 * @param {string} content
 * @param {string} quoteID
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function ImProxyClient_GroupSendText(groupId, content, quoteID) {
    return $Call.ByID(749390945, groupId, content, quoteID).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 退出一个群
 * @groupId    string      群id
 * @param {string} groupId
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function ImProxyClient_QuitGroup(groupId) {
    return $Call.ByID(253424257, groupId).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 设置订单等待上链
 * @param {string} orderId16
 * @param {number} lockHeight
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function ImProxyClient_SetOrderWaitOnChain(orderId16, lockHeight) {
    return $Call.ByID(1410324450, orderId16, lockHeight).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 修改一个群
 * @groupId      string    群id
 * @proxyAddr    string    代理节点地址，没有代理传空字符串
 * @nickname     string    群名称
 * @shoutUp      bool      是否禁言
 * @force        bool      是否强制托管，当群代理节点不工作的时候，强制自己托管
 * @param {string} groupId
 * @param {string} proxyAddr
 * @param {string} nickname
 * @param {boolean} shoutUp
 * @param {boolean} force
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function ImProxyClient_UpdateGroup(groupId, proxyAddr, nickname, shoutUp, force) {
    return $Call.ByID(21869103, groupId, proxyAddr, nickname, shoutUp, force).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 构建出完整的文件到指定文件夹
 * @param {string} addrStr
 * @param {string} sendIdStr
 * @param {string} filePath
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function JoinBuildFile(addrStr, sendIdStr, filePath) {
    return $Call.ByID(3004568287, addrStr, sendIdStr, filePath).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * @returns {$CancellablePromise<void>}
 */
export function Load() {
    return $Call.ByID(3028644307);
}

/**
 * @param {string} id
 * @param {string} address
 * @param {number} amount
 * @param {number} gas
 * @param {string} pwd
 * @param {string} name
 * @param {string} netids
 * @param {string} addrcoins
 * @param {string} comment
 * @returns {$CancellablePromise<void>}
 */
export function NameIn(id, address, amount, gas, pwd, name, netids, addrcoins, comment) {
    return $Call.ByID(2661619191, id, address, amount, gas, pwd, name, netids, addrcoins, comment);
}

/**
 * @param {string} id
 * @param {string} address
 * @param {number} amount
 * @param {number} gas
 * @param {string} pwd
 * @param {string} name
 * @param {string} comment
 * @returns {$CancellablePromise<void>}
 */
export function NameOut(id, address, amount, gas, pwd, name, comment) {
    return $Call.ByID(3365607292, id, address, amount, gas, pwd, name, comment);
}

/**
 * 打开文件多选框
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function OpenFileDialog() {
    return $Call.ByID(1972730997).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 支付一个订单
 * @remoteAddr    string    远程节点地址
 * @fileHash      string    文件hash
 * @param {string} serverAddr
 * @param {string} orderId16
 * @param {number} amount
 * @param {string} pwd
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function PayOrder(serverAddr, orderId16, amount, pwd) {
    return $Call.ByID(961153509, serverAddr, orderId16, amount, pwd).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 给一个好友发送文件
 * @addrStr     string    好友地址
 * @filePath    string    文件路径
 * @param {string} addrStr
 * @param {string} filePath
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function SendFiles(addrStr, filePath) {
    return $Call.ByID(3387648144, addrStr, filePath).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 给一个好友发送文件
 * @addrStr     string    好友地址
 * @filePath    string    文件路径
 * @param {string} addrStr
 * @param {string} filePath
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function SendFiles_old(addrStr, filePath) {
    return $Call.ByID(4003081214, addrStr, filePath).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 给一个好友发送图片
 * @param {string} addrStr
 * @param {string} imgBase64
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function SendImage(addrStr, imgBase64) {
    return $Call.ByID(1045782010, addrStr, imgBase64).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * @param {string} id
 * @param {string} srcAddr
 * @param {string} toAddr
 * @param {string} pwd
 * @param {number} amount
 * @param {number} gas
 * @returns {$CancellablePromise<clents$0.RespSendToAddress | null>}
 */
export function SendToAddress(id, srcAddr, toAddr, pwd, amount, gas) {
    return $Call.ByID(3626692132, id, srcAddr, toAddr, pwd, amount, gas).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType15($result);
    }));
}

/**
 * 给一个好友发送语音消息
 * @addrStr     string    * 好友地址
 * @mimeType    string      文件类型
 * @voiceCoding    string      语音编码字符串
 * @voiceSecond    int64       语音秒数
 * @param {string} addrStr
 * @param {string} mimeType
 * @param {string} voiceCoding
 * @param {number} voiceSecond
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function SendVoiceBase64(addrStr, mimeType, voiceCoding, voiceSecond) {
    return $Call.ByID(822850214, addrStr, mimeType, voiceCoding, voiceSecond).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 给一个好友发送语音消息
 * 传文件路径，文件类型和语音编码传空
 * @addrStr     string    * 好友地址
 * @filePath    string      文件路径
 * @mimeType    string      文件类型
 * @voiceCoding    string      语音编码字符串
 * @voiceSecond    int64     * 语音秒数
 * @param {string} addrStr
 * @param {string} filePath
 * @param {number} voiceSecond
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function SendVoiceFile(addrStr, filePath, voiceSecond) {
    return $Call.ByID(2457571103, addrStr, filePath, voiceSecond).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 检查密码是否正确
 * @param {boolean} full
 * @returns {$CancellablePromise<void>}
 */
export function SetFullscreen(full) {
    return $Call.ByID(1028836300, full);
}

/**
 * @param {string} id
 * @param {boolean} status
 * @returns {$CancellablePromise<void>}
 */
export function SetStatus(id, status) {
    return $Call.ByID(292969235, id, status);
}

/**
 * 获取异步计算的文件详细信息
 * @param {string} pid
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Sharebox_GetFileHash(pid) {
    return $Call.ByID(2421090918, pid).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 获取多个文件、文件夹中的所有文件的详细信息
 * @param {string[]} dirPaths
 * @param {string[]} filePaths
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Sharebox_GetFileInfo(dirPaths, filePaths) {
    return $Call.ByID(2176456170, dirPaths, filePaths).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 获取一个文件的订单
 * @remoteAddr    string    远程节点地址
 * @fileHash      string    文件hash
 * @param {string} remoteAddr
 * @param {string} fileHash
 * @param {number} price
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Sharebox_GetFileOrder(remoteAddr, fileHash, price) {
    return $Call.ByID(2201681866, remoteAddr, fileHash, price).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 设置一个文件的价格
 * @param {string} fileHash
 * @param {number} price
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Sharebox_SetFilePrice(fileHash, price) {
    return $Call.ByID(180191967, fileHash, price).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * startup is called when the app starts. The context is saved
 * so we can call the runtime methods
 * @returns {$CancellablePromise<void>}
 */
export function Startup() {
    return $Call.ByID(1237775492);
}

/**
 * 创建新文件夹
 * @serverAddr        string    服务器地址
 * @parentDirIDStr    string    上级文件夹id
 * @dirName           string    文件夹名称
 * @param {string} serverAddr
 * @param {string} parentDirIDStr
 * @param {string} dirName
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Storage_Client_CreateDir(serverAddr, parentDirIDStr, dirName) {
    return $Call.ByID(3697584154, serverAddr, parentDirIDStr, dirName).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 删除多个文件和文件夹
 * @serverAddr          string      服务器地址
 * @dirAndFilesIDStr    []string    文件或文件夹id
 * @param {string} serverAddr
 * @param {string[]} dirAndFilesIDStr
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Storage_Client_DelDirAndFile(serverAddr, dirAndFilesIDStr) {
    return $Call.ByID(1224953122, serverAddr, dirAndFilesIDStr).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 客户端获取文件列表
 * @serverAddr    string    服务器节点地址
 * @dirIDStr      string    文件夹id，顶层文件夹传空字符串
 * @param {string} serverAddr
 * @param {string} dirIDStr
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Storage_Client_GetFileList(serverAddr, dirIDStr) {
    return $Call.ByID(2587221099, serverAddr, dirIDStr).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 获取订单列表
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Storage_Client_GetOrderList() {
    return $Call.ByID(42554175).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 获取订单
 * @serverAddr    uint64     //存储提供商地址
 * @spaceTotal    uint64     //购买空间数量
 * @useTime       uint64     //空间使用时间 单位：1天
 * @param {string} serverAddr
 * @param {number} spaceTotal
 * @param {number} useTime
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Storage_Client_GetOrders(serverAddr, spaceTotal, useTime) {
    return $Call.ByID(2327804140, serverAddr, spaceTotal, useTime).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 订单续费
 * @preNumber     string     //前一个订单的id
 * @serverAddr    string     //存储提供商地址
 * @spaceTotal    uint64     //购买空间数量
 * @useTime       uint64     //空间使用时间 单位：1天
 * @param {string} preNumber
 * @param {string} serverAddr
 * @param {number} spaceTotal
 * @param {number} useTime
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Storage_Client_GetRenewalOrders(preNumber, serverAddr, spaceTotal, useTime) {
    return $Call.ByID(3870541730, preNumber, serverAddr, spaceTotal, useTime).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 修改文件或文件夹名称
 * @serverAddr          string    服务器地址
 * @dirAndFileIDStr     string    文件或文件夹id
 * @newName             string    新名称
 * @param {string} serverAddr
 * @param {string} dirAndFileIDStr
 * @param {string} newName
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Storage_Client_UpdateDirAndFileName(serverAddr, dirAndFileIDStr, newName) {
    return $Call.ByID(1227957623, serverAddr, dirAndFileIDStr, newName).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 客户端上传文件
 * @serverAddr    string      服务器地址
 * @dirID         string      远端文件夹id
 * @filesPath     []string    需上传的文件路径
 * @param {string} serverAddr
 * @param {string} dirID
 * @param {string[]} filesPath
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Storage_Client_UploadFiles(serverAddr, dirID, filesPath) {
    return $Call.ByID(2475212657, serverAddr, dirID, filesPath).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 下载文件和文件夹
 * @serverAddr          string      服务器地址
 * @dirAndFilesIDStr    []string    下载的文件和文件夹列表
 * @localPath           string      保存到本地的文件路径
 * @param {string} serverAddr
 * @param {string[]} dirAndFilesIDStr
 * @param {string} localPath
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Storage_Client_download(serverAddr, dirAndFilesIDStr, localPath) {
    return $Call.ByID(4070728863, serverAddr, dirAndFilesIDStr, localPath).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 下载完成列表
 * @startIndexStr    string    首页查询传空字符串；分页查询使用上页最后一条数据的dbid
 * @limit            int       本次查询需要返回的数量
 * @param {string} startIndexStr
 * @param {number} limit
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Storage_Client_downloadFinishList(startIndexStr, limit) {
    return $Call.ByID(2944438880, startIndexStr, limit).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 下载列表
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Storage_Client_downloadList() {
    return $Call.ByID(74870919).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 上传列表
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Storage_Client_uploadList() {
    return $Call.ByID(3739581514).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 获取搜索到的云存储服务器列表
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Storage_client_GetSearchStorageServiceList() {
    return $Call.ByID(3147918213).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 获取自己订单中云存储服务器列表
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Storage_client_GetStorageServiceList() {
    return $Call.ByID(2863457561).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 添加存储目录
 * @param {string} dir
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Storage_server_AddDirectory(dir) {
    return $Call.ByID(1731940249, dir).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 删除存储目录
 * @param {string} dir
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Storage_server_DelDirectory(dir) {
    return $Call.ByID(2621644259, dir).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 获取存储服务器状态信息
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Storage_server_GetStatus() {
    return $Call.ByID(330167419).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 打开或关闭云存储服务器
 * @param {boolean} isOpen
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Storage_server_SetOpen(isOpen) {
    return $Call.ByID(3730086409, isOpen).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 设置本节点存储空间单价和空间限制
 * @priceUnit     uint64   //单价 单位：1G
 * @selling       uint64   //售卖总容量 单位：1G
 * @userFreelimit uint64   //用户空闲空间限制,用户只能购买这么多剩余空间，当空间不够时才能继续购买 单位：1G
 * @userCanTotal  uint64   //每个用户可以购买的空间总量 单位：1G
 * @useTimeMax    uint64   //每个订单租用时间最大值 单位：天
 * @renewalTime   uint64   //续费时间，订单到期前多少天可以开始续费。等于0时，不能再续费了 单位：天
 * @param {string} nickName
 * @param {number} priceUnit
 * @param {number} selling
 * @param {number} userFreelimit
 * @param {number} userCanTotal
 * @param {number} useTimeMax
 * @param {number} renewalTime
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Storage_server_SetPriceUnit(nickName, priceUnit, selling, userFreelimit, userCanTotal, useTimeMax, renewalTime) {
    return $Call.ByID(789059596, nickName, priceUnit, selling, userFreelimit, userCanTotal, useTimeMax, renewalTime).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 设置本节点正在销售的存储空间
 * @selling    int64    要添加或减少的存储空间
 * @param {number} selling
 * @returns {$CancellablePromise<{ [_: string]: any }>}
 */
export function Storage_server_SetSelling(selling) {
    return $Call.ByID(3979094907, selling).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * 更新并重启
 * @returns {$CancellablePromise<number>}
 */
export function UpdateRestar() {
    return $Call.ByID(2224786115);
}

/**
 * @param {string} id
 * @param {number} votetype
 * @param {string} address
 * @param {string} witness
 * @param {number} amount
 * @param {number} gas
 * @param {number} rate
 * @param {string} pwd
 * @param {string} payload
 * @returns {$CancellablePromise<void>}
 */
export function VoteIn(id, votetype, address, witness, amount, gas, rate, pwd, payload) {
    return $Call.ByID(3810387576, id, votetype, address, witness, amount, gas, rate, pwd, payload);
}

/**
 * @param {string} id
 * @param {number} votetype
 * @param {string} address
 * @param {number} amount
 * @param {number} gas
 * @param {number} rate
 * @param {string} pwd
 * @param {string} payload
 * @returns {$CancellablePromise<void>}
 */
export function VoteOut(id, votetype, address, amount, gas, rate, pwd, payload) {
    return $Call.ByID(1935382653, id, votetype, address, amount, gas, rate, pwd, payload);
}

// Private type creation functions
const $$createType0 = $models.Peer.createFrom;
const $$createType1 = $Create.Nullable($$createType0);
const $$createType2 = $Create.Map($Create.Any, $Create.Any);
const $$createType3 = model$0.Getinfo.createFrom;
const $$createType4 = $Create.Nullable($$createType3);
const $$createType5 = $models.VersionUpdateInfo.createFrom;
const $$createType6 = clents$0.NameinfoVO.createFrom;
const $$createType7 = $Create.Nullable($$createType6);
const $$createType8 = $Create.Array($$createType7);
const $$createType9 = $models.NetWorkinfo.createFrom;
const $$createType10 = $Create.Nullable($$createType9);
const $$createType11 = $Create.Map($Create.Any, $Create.Any);
const $$createType12 = $Create.Array($$createType1);
const $$createType13 = engine$0.PostResult.createFrom;
const $$createType14 = clents$0.RespSendToAddress.createFrom;
const $$createType15 = $Create.Nullable($$createType14);
