// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Â MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import { Create as $Create } from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as mining$0 from "../../chain/mining/models.js";

/**
 * 详情
 */
export class Getinfo {
    /**
     * Creates a new Getinfo instance.
     * @param {Partial<Getinfo>} [$$source = {}] - The source object to create the Getinfo.
     */
    constructor($$source = {}) {
        if (!("TotalAmount" in $$source)) {
            /**
             * 发行总量
             * @member
             * @type {number}
             */
            this["TotalAmount"] = 0;
        }
        if (!("balance" in $$source)) {
            /**
             * 可用余额
             * @member
             * @type {number}
             */
            this["balance"] = 0;
        }
        if (!("BalanceFrozen" in $$source)) {
            /**
             * 冻结的余额
             * @member
             * @type {number}
             */
            this["BalanceFrozen"] = 0;
        }
        if (!("BalanceLockup" in $$source)) {
            /**
             * 锁仓的余额
             * @member
             * @type {number}
             */
            this["BalanceLockup"] = 0;
        }
        if (!("BalanceVote" in $$source)) {
            /**
             * 当前奖励总金额
             * @member
             * @type {number}
             */
            this["BalanceVote"] = 0;
        }
        if (!("testnet" in $$source)) {
            /**
             * 是否是测试网络
             * @member
             * @type {boolean}
             */
            this["testnet"] = false;
        }
        if (!("blocks" in $$source)) {
            /**
             * 已经同步到的区块高度
             * @member
             * @type {number}
             */
            this["blocks"] = 0;
        }
        if (!("group" in $$source)) {
            /**
             * 区块组高度
             * @member
             * @type {number}
             */
            this["group"] = 0;
        }
        if (!("StartingBlock" in $$source)) {
            /**
             * 区块开始高度
             * @member
             * @type {number}
             */
            this["StartingBlock"] = 0;
        }
        if (!("StartBlockTime" in $$source)) {
            /**
             * 创始区块出块时间
             * @member
             * @type {number}
             */
            this["StartBlockTime"] = 0;
        }
        if (!("HighestBlock" in $$source)) {
            /**
             * 所链接的节点的最高高度
             * @member
             * @type {number}
             */
            this["HighestBlock"] = 0;
        }
        if (!("CurrentBlock" in $$source)) {
            /**
             * 已经同步到的区块高度
             * @member
             * @type {number}
             */
            this["CurrentBlock"] = 0;
        }
        if (!("PulledStates" in $$source)) {
            /**
             * 正在同步的区块高度
             * @member
             * @type {number}
             */
            this["PulledStates"] = 0;
        }
        if (!("SnapshotHeight" in $$source)) {
            /**
             * 快照高度
             * @member
             * @type {number}
             */
            this["SnapshotHeight"] = 0;
        }
        if (!("BlockTime" in $$source)) {
            /**
             * 出块时间
             * @member
             * @type {number}
             */
            this["BlockTime"] = 0;
        }
        if (!("LightNode" in $$source)) {
            /**
             * 轻节点押金数量
             * @member
             * @type {number}
             */
            this["LightNode"] = 0;
        }
        if (!("CommunityNode" in $$source)) {
            /**
             * 社区节点押金数量
             * @member
             * @type {number}
             */
            this["CommunityNode"] = 0;
        }
        if (!("WitnessNode" in $$source)) {
            /**
             * 见证人押金数量
             * @member
             * @type {number}
             */
            this["WitnessNode"] = 0;
        }
        if (!("NameDepositMin" in $$source)) {
            /**
             * 域名押金最少金额
             * @member
             * @type {number}
             */
            this["NameDepositMin"] = 0;
        }
        if (!("AddrPre" in $$source)) {
            /**
             * 地址前缀
             * @member
             * @type {string}
             */
            this["AddrPre"] = "";
        }
        if (!("TokenInfos" in $$source)) {
            /**
             * @member
             * @type {(mining$0.TokenInfoV0 | null)[]}
             */
            this["TokenInfos"] = [];
        }
        if (!("SyncBlockFinish" in $$source)) {
            /**
             * 同步区块是否完成
             * @member
             * @type {boolean}
             */
            this["SyncBlockFinish"] = false;
        }
        if (!("contract_address" in $$source)) {
            /**
             * 奖励合约地址
             * @member
             * @type {string}
             */
            this["contract_address"] = "";
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new Getinfo instance from a string or object.
     * @param {any} [$$source = {}]
     * @returns {Getinfo}
     */
    static createFrom($$source = {}) {
        const $$createField20_0 = $$createType2;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("TokenInfos" in $$parsedSource) {
            $$parsedSource["TokenInfos"] = $$createField20_0($$parsedSource["TokenInfos"]);
        }
        return new Getinfo(/** @type {Partial<Getinfo>} */($$parsedSource));
    }
}

// Private type creation functions
const $$createType0 = mining$0.TokenInfoV0.createFrom;
const $$createType1 = $Create.Nullable($$createType0);
const $$createType2 = $Create.Array($$createType1);
