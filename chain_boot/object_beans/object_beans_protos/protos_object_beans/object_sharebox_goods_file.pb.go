// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: object_sharebox_goods_file.proto

//包名，通过protoc生成时go文件时

package protos_object_beans

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ObjectShareboxGoodsFile struct {
	Base                 *ObjectBase `protobuf:"bytes,1,opt,name=Base,proto3" json:"Base,omitempty"`
	GoodsId              []byte      `protobuf:"bytes,2,opt,name=GoodsId,proto3" json:"GoodsId,omitempty"`
	Price                uint64      `protobuf:"varint,3,opt,name=Price,proto3" json:"Price,omitempty"`
	SalesTotalMany       bool        `protobuf:"varint,4,opt,name=SalesTotalMany,proto3" json:"SalesTotalMany,omitempty"`
	SalesTotal           uint64      `protobuf:"varint,5,opt,name=SalesTotal,proto3" json:"SalesTotal,omitempty"`
	SoldTotal            uint64      `protobuf:"varint,6,opt,name=SoldTotal,proto3" json:"SoldTotal,omitempty"`
	LockTotal            uint64      `protobuf:"varint,7,opt,name=LockTotal,proto3" json:"LockTotal,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ObjectShareboxGoodsFile) Reset()         { *m = ObjectShareboxGoodsFile{} }
func (m *ObjectShareboxGoodsFile) String() string { return proto.CompactTextString(m) }
func (*ObjectShareboxGoodsFile) ProtoMessage()    {}
func (*ObjectShareboxGoodsFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_58a14fd12dadd24c, []int{0}
}
func (m *ObjectShareboxGoodsFile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ObjectShareboxGoodsFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ObjectShareboxGoodsFile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ObjectShareboxGoodsFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectShareboxGoodsFile.Merge(m, src)
}
func (m *ObjectShareboxGoodsFile) XXX_Size() int {
	return m.Size()
}
func (m *ObjectShareboxGoodsFile) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectShareboxGoodsFile.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectShareboxGoodsFile proto.InternalMessageInfo

func (m *ObjectShareboxGoodsFile) GetBase() *ObjectBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *ObjectShareboxGoodsFile) GetGoodsId() []byte {
	if m != nil {
		return m.GoodsId
	}
	return nil
}

func (m *ObjectShareboxGoodsFile) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *ObjectShareboxGoodsFile) GetSalesTotalMany() bool {
	if m != nil {
		return m.SalesTotalMany
	}
	return false
}

func (m *ObjectShareboxGoodsFile) GetSalesTotal() uint64 {
	if m != nil {
		return m.SalesTotal
	}
	return 0
}

func (m *ObjectShareboxGoodsFile) GetSoldTotal() uint64 {
	if m != nil {
		return m.SoldTotal
	}
	return 0
}

func (m *ObjectShareboxGoodsFile) GetLockTotal() uint64 {
	if m != nil {
		return m.LockTotal
	}
	return 0
}

func init() {
	proto.RegisterType((*ObjectShareboxGoodsFile)(nil), "go_protos.ObjectShareboxGoodsFile")
}

func init() { proto.RegisterFile("object_sharebox_goods_file.proto", fileDescriptor_58a14fd12dadd24c) }

var fileDescriptor_58a14fd12dadd24c = []byte{
	// 258 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0xc8, 0x4f, 0xca, 0x4a,
	0x4d, 0x2e, 0x89, 0x2f, 0xce, 0x48, 0x2c, 0x4a, 0x4d, 0xca, 0xaf, 0x88, 0x4f, 0xcf, 0xcf, 0x4f,
	0x29, 0x8e, 0x4f, 0xcb, 0xcc, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4c, 0xcf,
	0x8f, 0x07, 0xb3, 0x8a, 0xa5, 0x04, 0xa1, 0x8a, 0x93, 0x12, 0x8b, 0xa1, 0xb2, 0x4a, 0x3f, 0x18,
	0xb9, 0xc4, 0xfd, 0xc1, 0xa2, 0xc1, 0x50, 0x13, 0xdc, 0x41, 0x06, 0xb8, 0x65, 0xe6, 0xa4, 0x0a,
	0x69, 0x72, 0xb1, 0x38, 0x25, 0x16, 0xa7, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x1b, 0x89, 0xea,
	0xc1, 0x0d, 0xd2, 0x83, 0xe8, 0x00, 0x49, 0x06, 0x81, 0x95, 0x08, 0x49, 0x70, 0xb1, 0x83, 0xf5,
	0x79, 0xa6, 0x48, 0x30, 0x29, 0x30, 0x6a, 0xf0, 0x04, 0xc1, 0xb8, 0x42, 0x22, 0x5c, 0xac, 0x01,
	0x45, 0x99, 0xc9, 0xa9, 0x12, 0xcc, 0x0a, 0x8c, 0x1a, 0x2c, 0x41, 0x10, 0x8e, 0x90, 0x1a, 0x17,
	0x5f, 0x70, 0x62, 0x4e, 0x6a, 0x71, 0x48, 0x7e, 0x49, 0x62, 0x8e, 0x6f, 0x62, 0x5e, 0xa5, 0x04,
	0x8b, 0x02, 0xa3, 0x06, 0x47, 0x10, 0x9a, 0xa8, 0x90, 0x1c, 0x17, 0x17, 0x42, 0x44, 0x82, 0x15,
	0x6c, 0x04, 0x92, 0x88, 0x90, 0x0c, 0x17, 0x67, 0x70, 0x7e, 0x4e, 0x0a, 0x44, 0x9a, 0x0d, 0x2c,
	0x8d, 0x10, 0x00, 0xc9, 0xfa, 0xe4, 0x27, 0x67, 0x43, 0x64, 0xd9, 0x21, 0xb2, 0x70, 0x01, 0x27,
	0xf5, 0x13, 0x8f, 0xe4, 0x18, 0x2f, 0x3c, 0x92, 0x63, 0x7c, 0xf0, 0x48, 0x8e, 0x71, 0xc6, 0x63,
	0x39, 0x86, 0x28, 0x51, 0x3d, 0x7d, 0x88, 0x07, 0xe3, 0x61, 0x01, 0x95, 0x9a, 0x98, 0x57, 0x9c,
	0xc4, 0x06, 0x16, 0x34, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x6b, 0xbb, 0x4e, 0x6b, 0x6c, 0x01,
	0x00, 0x00,
}

func (m *ObjectShareboxGoodsFile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ObjectShareboxGoodsFile) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ObjectShareboxGoodsFile) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.LockTotal != 0 {
		i = encodeVarintObjectShareboxGoodsFile(dAtA, i, uint64(m.LockTotal))
		i--
		dAtA[i] = 0x38
	}
	if m.SoldTotal != 0 {
		i = encodeVarintObjectShareboxGoodsFile(dAtA, i, uint64(m.SoldTotal))
		i--
		dAtA[i] = 0x30
	}
	if m.SalesTotal != 0 {
		i = encodeVarintObjectShareboxGoodsFile(dAtA, i, uint64(m.SalesTotal))
		i--
		dAtA[i] = 0x28
	}
	if m.SalesTotalMany {
		i--
		if m.SalesTotalMany {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Price != 0 {
		i = encodeVarintObjectShareboxGoodsFile(dAtA, i, uint64(m.Price))
		i--
		dAtA[i] = 0x18
	}
	if len(m.GoodsId) > 0 {
		i -= len(m.GoodsId)
		copy(dAtA[i:], m.GoodsId)
		i = encodeVarintObjectShareboxGoodsFile(dAtA, i, uint64(len(m.GoodsId)))
		i--
		dAtA[i] = 0x12
	}
	if m.Base != nil {
		{
			size, err := m.Base.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintObjectShareboxGoodsFile(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintObjectShareboxGoodsFile(dAtA []byte, offset int, v uint64) int {
	offset -= sovObjectShareboxGoodsFile(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ObjectShareboxGoodsFile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Base != nil {
		l = m.Base.Size()
		n += 1 + l + sovObjectShareboxGoodsFile(uint64(l))
	}
	l = len(m.GoodsId)
	if l > 0 {
		n += 1 + l + sovObjectShareboxGoodsFile(uint64(l))
	}
	if m.Price != 0 {
		n += 1 + sovObjectShareboxGoodsFile(uint64(m.Price))
	}
	if m.SalesTotalMany {
		n += 2
	}
	if m.SalesTotal != 0 {
		n += 1 + sovObjectShareboxGoodsFile(uint64(m.SalesTotal))
	}
	if m.SoldTotal != 0 {
		n += 1 + sovObjectShareboxGoodsFile(uint64(m.SoldTotal))
	}
	if m.LockTotal != 0 {
		n += 1 + sovObjectShareboxGoodsFile(uint64(m.LockTotal))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovObjectShareboxGoodsFile(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozObjectShareboxGoodsFile(x uint64) (n int) {
	return sovObjectShareboxGoodsFile(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ObjectShareboxGoodsFile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowObjectShareboxGoodsFile
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ObjectShareboxGoodsFile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ObjectShareboxGoodsFile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Base", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowObjectShareboxGoodsFile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthObjectShareboxGoodsFile
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthObjectShareboxGoodsFile
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Base == nil {
				m.Base = &ObjectBase{}
			}
			if err := m.Base.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GoodsId", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowObjectShareboxGoodsFile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthObjectShareboxGoodsFile
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthObjectShareboxGoodsFile
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GoodsId = append(m.GoodsId[:0], dAtA[iNdEx:postIndex]...)
			if m.GoodsId == nil {
				m.GoodsId = []byte{}
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Price", wireType)
			}
			m.Price = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowObjectShareboxGoodsFile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Price |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SalesTotalMany", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowObjectShareboxGoodsFile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SalesTotalMany = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SalesTotal", wireType)
			}
			m.SalesTotal = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowObjectShareboxGoodsFile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SalesTotal |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SoldTotal", wireType)
			}
			m.SoldTotal = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowObjectShareboxGoodsFile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SoldTotal |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LockTotal", wireType)
			}
			m.LockTotal = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowObjectShareboxGoodsFile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LockTotal |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipObjectShareboxGoodsFile(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthObjectShareboxGoodsFile
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipObjectShareboxGoodsFile(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowObjectShareboxGoodsFile
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowObjectShareboxGoodsFile
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowObjectShareboxGoodsFile
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthObjectShareboxGoodsFile
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupObjectShareboxGoodsFile
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthObjectShareboxGoodsFile
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthObjectShareboxGoodsFile        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowObjectShareboxGoodsFile          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupObjectShareboxGoodsFile = fmt.Errorf("proto: unexpected end of group")
)
