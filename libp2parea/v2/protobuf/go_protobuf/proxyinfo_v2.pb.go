// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proxyinfo_v2.proto

//包名，通过protoc生成时go文件时

package go_protobuf

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ProxyRepeatedV2 struct {
	Proxys               []*ProxyInfoV2 `protobuf:"bytes,1,rep,name=proxys,proto3" json:"proxys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ProxyRepeatedV2) Reset()         { *m = ProxyRepeatedV2{} }
func (m *ProxyRepeatedV2) String() string { return proto.CompactTextString(m) }
func (*ProxyRepeatedV2) ProtoMessage()    {}
func (*ProxyRepeatedV2) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d112affc3d2b06a, []int{0}
}
func (m *ProxyRepeatedV2) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProxyRepeatedV2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProxyRepeatedV2.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProxyRepeatedV2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProxyRepeatedV2.Merge(m, src)
}
func (m *ProxyRepeatedV2) XXX_Size() int {
	return m.Size()
}
func (m *ProxyRepeatedV2) XXX_DiscardUnknown() {
	xxx_messageInfo_ProxyRepeatedV2.DiscardUnknown(m)
}

var xxx_messageInfo_ProxyRepeatedV2 proto.InternalMessageInfo

func (m *ProxyRepeatedV2) GetProxys() []*ProxyInfoV2 {
	if m != nil {
		return m.Proxys
	}
	return nil
}

type ProxyInfoV2 struct {
	Id                   []byte   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	ProxyId              []byte   `protobuf:"bytes,2,opt,name=ProxyId,proto3" json:"ProxyId,omitempty"`
	MachineID            string   `protobuf:"bytes,3,opt,name=MachineID,proto3" json:"MachineID,omitempty"`
	Version              int64    `protobuf:"varint,4,opt,name=Version,proto3" json:"Version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProxyInfoV2) Reset()         { *m = ProxyInfoV2{} }
func (m *ProxyInfoV2) String() string { return proto.CompactTextString(m) }
func (*ProxyInfoV2) ProtoMessage()    {}
func (*ProxyInfoV2) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d112affc3d2b06a, []int{1}
}
func (m *ProxyInfoV2) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProxyInfoV2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProxyInfoV2.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProxyInfoV2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProxyInfoV2.Merge(m, src)
}
func (m *ProxyInfoV2) XXX_Size() int {
	return m.Size()
}
func (m *ProxyInfoV2) XXX_DiscardUnknown() {
	xxx_messageInfo_ProxyInfoV2.DiscardUnknown(m)
}

var xxx_messageInfo_ProxyInfoV2 proto.InternalMessageInfo

func (m *ProxyInfoV2) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ProxyInfoV2) GetProxyId() []byte {
	if m != nil {
		return m.ProxyId
	}
	return nil
}

func (m *ProxyInfoV2) GetMachineID() string {
	if m != nil {
		return m.MachineID
	}
	return ""
}

func (m *ProxyInfoV2) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func init() {
	proto.RegisterType((*ProxyRepeatedV2)(nil), "protobuf.ProxyRepeatedV2")
	proto.RegisterType((*ProxyInfoV2)(nil), "protobuf.ProxyInfoV2")
}

func init() { proto.RegisterFile("proxyinfo_v2.proto", fileDescriptor_2d112affc3d2b06a) }

var fileDescriptor_2d112affc3d2b06a = []byte{
	// 205 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2a, 0x28, 0xca, 0xaf,
	0xa8, 0xcc, 0xcc, 0x4b, 0xcb, 0x8f, 0x2f, 0x33, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2,
	0x00, 0x53, 0x49, 0xa5, 0x69, 0x4a, 0x0e, 0x5c, 0xfc, 0x01, 0x20, 0xf9, 0xa0, 0xd4, 0x82, 0xd4,
	0xc4, 0x92, 0xd4, 0x94, 0x30, 0x23, 0x21, 0x5d, 0x2e, 0x36, 0xb0, 0x96, 0x62, 0x09, 0x46, 0x05,
	0x66, 0x0d, 0x6e, 0x23, 0x51, 0x3d, 0x98, 0x6a, 0x3d, 0xb0, 0x52, 0xcf, 0xbc, 0xb4, 0xfc, 0x30,
	0xa3, 0x20, 0xa8, 0x22, 0xa5, 0x7c, 0x2e, 0x6e, 0x24, 0x61, 0x21, 0x3e, 0x2e, 0x26, 0xcf, 0x14,
	0x09, 0x46, 0x05, 0x46, 0x0d, 0x9e, 0x20, 0x26, 0xcf, 0x14, 0x21, 0x09, 0x2e, 0x76, 0x88, 0x74,
	0x8a, 0x04, 0x13, 0x58, 0x10, 0xc6, 0x15, 0x92, 0xe1, 0xe2, 0xf4, 0x4d, 0x4c, 0xce, 0xc8, 0xcc,
	0x4b, 0xf5, 0x74, 0x91, 0x60, 0x56, 0x60, 0xd4, 0xe0, 0x0c, 0x42, 0x08, 0x80, 0xf4, 0x85, 0xa5,
	0x16, 0x15, 0x67, 0xe6, 0xe7, 0x49, 0xb0, 0x28, 0x30, 0x6a, 0x30, 0x07, 0xc1, 0xb8, 0x4e, 0xf2,
	0x27, 0x1e, 0xc9, 0x31, 0x5e, 0x78, 0x24, 0xc7, 0xf8, 0xe0, 0x91, 0x1c, 0xe3, 0x8c, 0xc7, 0x72,
	0x0c, 0x51, 0xbc, 0x7a, 0xfa, 0xe9, 0xf9, 0xf1, 0x30, 0x57, 0x26, 0xb1, 0x81, 0x59, 0xc6, 0x80,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x96, 0x95, 0xfa, 0xb4, 0xfa, 0x00, 0x00, 0x00,
}

func (m *ProxyRepeatedV2) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProxyRepeatedV2) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProxyRepeatedV2) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Proxys) > 0 {
		for iNdEx := len(m.Proxys) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Proxys[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProxyinfoV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ProxyInfoV2) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProxyInfoV2) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProxyInfoV2) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Version != 0 {
		i = encodeVarintProxyinfoV2(dAtA, i, uint64(m.Version))
		i--
		dAtA[i] = 0x20
	}
	if len(m.MachineID) > 0 {
		i -= len(m.MachineID)
		copy(dAtA[i:], m.MachineID)
		i = encodeVarintProxyinfoV2(dAtA, i, uint64(len(m.MachineID)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ProxyId) > 0 {
		i -= len(m.ProxyId)
		copy(dAtA[i:], m.ProxyId)
		i = encodeVarintProxyinfoV2(dAtA, i, uint64(len(m.ProxyId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintProxyinfoV2(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintProxyinfoV2(dAtA []byte, offset int, v uint64) int {
	offset -= sovProxyinfoV2(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ProxyRepeatedV2) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Proxys) > 0 {
		for _, e := range m.Proxys {
			l = e.Size()
			n += 1 + l + sovProxyinfoV2(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProxyInfoV2) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovProxyinfoV2(uint64(l))
	}
	l = len(m.ProxyId)
	if l > 0 {
		n += 1 + l + sovProxyinfoV2(uint64(l))
	}
	l = len(m.MachineID)
	if l > 0 {
		n += 1 + l + sovProxyinfoV2(uint64(l))
	}
	if m.Version != 0 {
		n += 1 + sovProxyinfoV2(uint64(m.Version))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovProxyinfoV2(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozProxyinfoV2(x uint64) (n int) {
	return sovProxyinfoV2(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ProxyRepeatedV2) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProxyinfoV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProxyRepeatedV2: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProxyRepeatedV2: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Proxys", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProxyinfoV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProxyinfoV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProxyinfoV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Proxys = append(m.Proxys, &ProxyInfoV2{})
			if err := m.Proxys[len(m.Proxys)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProxyinfoV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProxyinfoV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProxyInfoV2) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProxyinfoV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProxyInfoV2: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProxyInfoV2: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProxyinfoV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProxyinfoV2
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProxyinfoV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = append(m.Id[:0], dAtA[iNdEx:postIndex]...)
			if m.Id == nil {
				m.Id = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProxyId", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProxyinfoV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProxyinfoV2
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthProxyinfoV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProxyId = append(m.ProxyId[:0], dAtA[iNdEx:postIndex]...)
			if m.ProxyId == nil {
				m.ProxyId = []byte{}
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MachineID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProxyinfoV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProxyinfoV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProxyinfoV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MachineID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
			}
			m.Version = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProxyinfoV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Version |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProxyinfoV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProxyinfoV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipProxyinfoV2(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowProxyinfoV2
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProxyinfoV2
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProxyinfoV2
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthProxyinfoV2
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupProxyinfoV2
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthProxyinfoV2
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthProxyinfoV2        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowProxyinfoV2          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupProxyinfoV2 = fmt.Errorf("proto: unexpected end of group")
)
