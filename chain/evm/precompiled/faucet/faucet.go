package faucet

import (
	"strings"

	"web3_gui/chain/evm/abi"
	"web3_gui/chain/evm/common"
	"web3_gui/chain/evm/common/evmutils"
	"web3_gui/keystore/adapter/crypto"
)

const (
	FAUCET_ABI = "[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"amountAllowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donateTofaucet\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"_requestor\",\"type\":\"address\"}],\"name\":\"requestTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newAmountAllowed\",\"type\":\"uint256\"}],\"name\":\"setAmountallowed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"
	FAUCET_BIN = "6080604052633b9aca00600155336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506108af8061005b6000396000f3fe6080604052600436106100705760003560e01c80638da5cb5b1161004e5780638da5cb5b146100d15780639ad2cd14146100fc578063a4beda6314610127578063f3aa52a11461016457610070565b806313af403514610075578063580f39041461009e578063605e73cd146100c7575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190610500565b61018d565b005b3480156100aa57600080fd5b506100c560048036038101906100c0919061056b565b61025e565b005b6100cf6103c1565b005b3480156100dd57600080fd5b506100e66103c3565b6040516100f391906105a7565b60405180910390f35b34801561010857600080fd5b506101116103e7565b60405161011e91906105db565b60405180910390f35b34801561013357600080fd5b5061014e60048036038101906101499190610500565b6103ed565b60405161015b91906105db565b60405180910390f35b34801561017057600080fd5b5061018b60048036038101906101869190610622565b610405565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461021b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610212906106d2565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442116102df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d690610764565b60405180910390fd5b6001544711610323576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031a906107f6565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc6001549081150290604051600060405180830381858888f1935050505015801561036b573d6000803e3d6000fd5b50620151804261037b9190610845565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60026020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610493576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048a906106d2565b60405180910390fd5b8060018190555050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104cd826104a2565b9050919050565b6104dd816104c2565b81146104e857600080fd5b50565b6000813590506104fa816104d4565b92915050565b6000602082840312156105165761051561049d565b5b6000610524848285016104eb565b91505092915050565b6000610538826104a2565b9050919050565b6105488161052d565b811461055357600080fd5b50565b6000813590506105658161053f565b92915050565b6000602082840312156105815761058061049d565b5b600061058f84828501610556565b91505092915050565b6105a1816104c2565b82525050565b60006020820190506105bc6000830184610598565b92915050565b6000819050919050565b6105d5816105c2565b82525050565b60006020820190506105f060008301846105cc565b92915050565b6105ff816105c2565b811461060a57600080fd5b50565b60008135905061061c816105f6565b92915050565b6000602082840312156106385761063761049d565b5b60006106468482850161060d565b91505092915050565b600082825260208201905092915050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60008201527f6e2e000000000000000000000000000000000000000000000000000000000000602082015250565b60006106bc60228361064f565b91506106c782610660565b604082019050919050565b600060208201905081810360008301526106eb816106af565b9050919050565b7f6c6f636b2074696d6520686173206e6f7420657870697265642e20506c65617360008201527f652074727920616761696e206c61746572000000000000000000000000000000602082015250565b600061074e60318361064f565b9150610759826106f2565b604082019050919050565b6000602082019050818103600083015261077d81610741565b9050919050565b7f4e6f7420656e6f7567682066756e647320696e20746865206661756365742e2060008201527f506c6561736520646f6e61746500000000000000000000000000000000000000602082015250565b60006107e0602d8361064f565b91506107eb82610784565b604082019050919050565b6000602082019050818103600083015261080f816107d3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610850826105c2565b915061085b836105c2565b925082820190508082111561087357610872610816565b5b9291505056fea26469706673582212200ccf519d3cb20adf20afa6863ced10e36cabe59d4ab967a4bda287389e595f9864736f6c63430008110033"
)

func BuildReceiveTCoinInput(to string) string {
	abiObj, _ := abi.JSON(strings.NewReader(FAUCET_ABI))
	toAddr := common.Address(evmutils.AddressCoinToAddress(crypto.AddressFromB58String(to)))
	input, _ := abiObj.Pack("requestTokens", toAddr)
	return common.Bytes2Hex(input)
}
func BuildReChargeTCoinInput() string {
	abiObj, _ := abi.JSON(strings.NewReader(FAUCET_ABI))
	input, _ := abiObj.Pack("donateTofaucet")
	return common.Bytes2Hex(input)
}
