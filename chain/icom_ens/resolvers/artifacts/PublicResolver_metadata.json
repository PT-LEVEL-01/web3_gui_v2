{
	"compiler": {
		"version": "0.7.6+commit.7338295f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "contract ENS",
						"name": "_ens",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "contentType",
						"type": "uint256"
					}
				],
				"name": "ABIChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "a",
						"type": "address"
					}
				],
				"name": "AddrChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "string",
						"name": "node",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "coinType",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "newAddress",
						"type": "bytes"
					}
				],
				"name": "AddressChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "target",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "isAuthorised",
						"type": "bool"
					}
				],
				"name": "AuthorisationChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "hash",
						"type": "bytes"
					}
				],
				"name": "ContenthashChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "bytes4",
						"name": "interfaceID",
						"type": "bytes4"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "implementer",
						"type": "address"
					}
				],
				"name": "InterfaceChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "name",
						"type": "string"
					}
				],
				"name": "NameChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "x",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "y",
						"type": "bytes32"
					}
				],
				"name": "PubkeyChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "string",
						"name": "indexedKey",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "key",
						"type": "string"
					}
				],
				"name": "TextChanged",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "contentTypes",
						"type": "uint256"
					}
				],
				"name": "ABI",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					}
				],
				"name": "addr",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "coinType",
						"type": "uint256"
					}
				],
				"name": "addr",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "coinType",
						"type": "uint256"
					}
				],
				"name": "addrV1",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "authorisations",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					}
				],
				"name": "contenthash",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "coinType",
						"type": "uint256"
					}
				],
				"name": "delAddr",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					}
				],
				"name": "delAddr",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "coinType",
						"type": "uint256"
					}
				],
				"name": "delAddrV1",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"internalType": "bytes4",
						"name": "interfaceID",
						"type": "bytes4"
					}
				],
				"name": "interfaceImplementer",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes[]",
						"name": "data",
						"type": "bytes[]"
					}
				],
				"name": "multicall",
				"outputs": [
					{
						"internalType": "bytes[]",
						"name": "results",
						"type": "bytes[]"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					}
				],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					}
				],
				"name": "pubkey",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "x",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "y",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "contentType",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "setABI",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "coinType",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "a",
						"type": "bytes"
					}
				],
				"name": "setAddr",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "a",
						"type": "address"
					}
				],
				"name": "setAddr",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "coinType",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "a",
						"type": "bytes"
					}
				],
				"name": "setAddrV1",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "target",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "isAuthorised",
						"type": "bool"
					}
				],
				"name": "setAuthorisation",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"internalType": "bytes",
						"name": "hash",
						"type": "bytes"
					}
				],
				"name": "setContenthash",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"internalType": "bytes4",
						"name": "interfaceID",
						"type": "bytes4"
					},
					{
						"internalType": "address",
						"name": "implementer",
						"type": "address"
					}
				],
				"name": "setInterface",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					}
				],
				"name": "setName",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "x",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "y",
						"type": "bytes32"
					}
				],
				"name": "setPubkey",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"internalType": "string",
						"name": "key",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "value",
						"type": "string"
					}
				],
				"name": "setText",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceID",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"internalType": "string",
						"name": "key",
						"type": "string"
					}
				],
				"name": "text",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"ABI(bytes32,uint256)": {
					"params": {
						"contentTypes": "A bitwise OR of the ABI formats accepted by the caller.",
						"node": "The ENS node to query"
					},
					"returns": {
						"_0": "contentType The content type of the return value",
						"_1": "data The ABI data"
					}
				},
				"addr(bytes32)": {
					"params": {
						"node": "The ENS node to query."
					},
					"returns": {
						"_0": "The associated address."
					}
				},
				"contenthash(bytes32)": {
					"params": {
						"node": "The ENS node to query."
					},
					"returns": {
						"_0": "The associated contenthash."
					}
				},
				"interfaceImplementer(bytes32,bytes4)": {
					"params": {
						"interfaceID": "The EIP 165 interface ID to check for.",
						"node": "The ENS node to query."
					},
					"returns": {
						"_0": "The address that implements this interface, or 0 if the interface is unsupported."
					}
				},
				"name(bytes32)": {
					"params": {
						"node": "The ENS node to query."
					},
					"returns": {
						"_0": "The associated name."
					}
				},
				"pubkey(bytes32)": {
					"params": {
						"node": "The ENS node to query"
					},
					"returns": {
						"x": "The X coordinate of the curve point for the public key.",
						"y": "The Y coordinate of the curve point for the public key."
					}
				},
				"setABI(bytes32,uint256,bytes)": {
					"params": {
						"contentType": "The content type of the ABI",
						"data": "The ABI data.",
						"node": "The node to update."
					}
				},
				"setAddr(bytes32,address)": {
					"params": {
						"a": "The address to set.",
						"node": "The node to update."
					}
				},
				"setAuthorisation(bytes32,address,bool)": {
					"details": "Sets or clears an authorisation. Authorisations are specific to the caller. Any account can set an authorisation for any name, but the authorisation that is checked will be that of the current owner of a name. Thus, transferring a name effectively clears any existing authorisations, and new authorisations can be set in advance of an ownership transfer if desired.",
					"params": {
						"isAuthorised": "True if the address should be authorised, or false if it should be deauthorised.",
						"node": "The name to change the authorisation on.",
						"target": "The address that is to be authorised or deauthorised."
					}
				},
				"setContenthash(bytes32,bytes)": {
					"params": {
						"hash": "The contenthash to set",
						"node": "The node to update."
					}
				},
				"setInterface(bytes32,bytes4,address)": {
					"params": {
						"implementer": "The address of a contract that implements this interface for this node.",
						"interfaceID": "The EIP 165 interface ID.",
						"node": "The node to update."
					}
				},
				"setName(bytes32,string)": {
					"params": {
						"name": "The name to set.",
						"node": "The node to update."
					}
				},
				"setPubkey(bytes32,bytes32,bytes32)": {
					"params": {
						"node": "The ENS node to query",
						"x": "the X coordinate of the curve point for the public key.",
						"y": "the Y coordinate of the curve point for the public key."
					}
				},
				"setText(bytes32,string,string)": {
					"params": {
						"key": "The key to set.",
						"node": "The node to update.",
						"value": "The text data value to set."
					}
				},
				"text(bytes32,string)": {
					"params": {
						"key": "The text data key to query.",
						"node": "The ENS node to query."
					},
					"returns": {
						"_0": "The associated text data."
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"ABI(bytes32,uint256)": {
					"notice": "Returns the ABI associated with an ENS node. Defined in EIP205."
				},
				"addr(bytes32)": {
					"notice": "Returns the address associated with an ENS node."
				},
				"authorisations(bytes32,address,address)": {
					"notice": "A mapping of authorisations. An address that is authorised for a name may make any changes to the name that the owner could, but may not update the set of authorisations. (node, owner, caller) => isAuthorised"
				},
				"contenthash(bytes32)": {
					"notice": "Returns the contenthash associated with an ENS node."
				},
				"interfaceImplementer(bytes32,bytes4)": {
					"notice": "Returns the address of a contract that implements the specified interface for this name. If an implementer has not been set for this interfaceID and name, the resolver will query the contract at `addr()`. If `addr()` is set, a contract exists at that address, and that contract implements EIP165 and returns `true` for the specified interfaceID, its address will be returned."
				},
				"name(bytes32)": {
					"notice": "Returns the name associated with an ENS node, for reverse records. Defined in EIP181."
				},
				"pubkey(bytes32)": {
					"notice": "Returns the SECP256k1 public key associated with an ENS node. Defined in EIP 619."
				},
				"setABI(bytes32,uint256,bytes)": {
					"notice": "Sets the ABI associated with an ENS node. Nodes may have one ABI of each content type. To remove an ABI, set it to the empty string."
				},
				"setAddr(bytes32,address)": {
					"notice": "Sets the address associated with an ENS node. May only be called by the owner of that node in the ENS registry."
				},
				"setContenthash(bytes32,bytes)": {
					"notice": "Sets the contenthash associated with an ENS node. May only be called by the owner of that node in the ENS registry."
				},
				"setInterface(bytes32,bytes4,address)": {
					"notice": "Sets an interface associated with a name. Setting the address to 0 restores the default behaviour of querying the contract at `addr()` for interface support."
				},
				"setName(bytes32,string)": {
					"notice": "Sets the name associated with an ENS node, for reverse records. May only be called by the owner of that node in the ENS registry."
				},
				"setPubkey(bytes32,bytes32,bytes32)": {
					"notice": "Sets the SECP256k1 public key associated with an ENS node."
				},
				"setText(bytes32,string,string)": {
					"notice": "Sets the text data associated with an ENS node and key. May only be called by the owner of that node in the ENS registry."
				},
				"text(bytes32,string)": {
					"notice": "Returns the text data associated with an ENS node and key."
				}
			},
			"notice": "A simple resolver anyone can use; only allows the owner of a node to set its address.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"resolvers/PublicResolver.sol": "PublicResolver"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"resolvers/ENS.sol": {
			"keccak256": "0xb29447d7eed8ae5d47de810ae9e54efbfb1bfe4e33128eaf0c158aeb47388a86",
			"urls": [
				"bzz-raw://3eb0ab8564497be1c084468b55fa338ba82b30fb6b415d739de25ba60082ebf7",
				"dweb:/ipfs/QmT59jr4tMQ6TjjLep8qpEZEzc3LR39L3PcG77YQZXMEcb"
			]
		},
		"resolvers/PublicResolver.sol": {
			"keccak256": "0x71183f4ce8a2c03feb843c7a47078b952a2e5a48373fc9e726108d5dd6998be0",
			"license": "MIT",
			"urls": [
				"bzz-raw://6416c23eaff715127f68bf216625446dcfb69cc63db40278b21bc1540fd7b05a",
				"dweb:/ipfs/QmdanNYkwDdK2Njwz3GyjcEuGX22f7TZ93WC9YMBqPQuKc"
			]
		},
		"resolvers/ResolverBase.sol": {
			"keccak256": "0xaaff59fd4f345bab1448ab6fc5a077d513486545ad98ebdcef2520ef65e18299",
			"license": "MIT",
			"urls": [
				"bzz-raw://ecb42159d5e0e578ecc493a288aab5a9300e5996279818f1eaa11a1ffc55707e",
				"dweb:/ipfs/QmPppdpxFDgjCh3TNbno3z8VLRZ13w1DomiTG29xidPycB"
			]
		},
		"resolvers/profiles/ABIResolver.sol": {
			"keccak256": "0x5df7ce3be7e936c1f9fbf7a8c72c45db5da66b2b4a641482338041bbe110bde1",
			"license": "MIT",
			"urls": [
				"bzz-raw://f4b414e8278a89b90da9ec5dc39993f5b32ccc440ac15e9a1d5c4c09026783b9",
				"dweb:/ipfs/QmeLBXHdTiXFsC4R7ZssjNusBvYN46tGpmqt6Eu6q9z41V"
			]
		},
		"resolvers/profiles/AddrResolver.sol": {
			"keccak256": "0xaad8fc7ca49123d588e1b48e5c5d27891f79fc5bd31e5e2c2cd98642697496b6",
			"license": "MIT",
			"urls": [
				"bzz-raw://3e7058b0191b1403913a3e8ac95b292df8fec278ab139aa7fcf99c1a25616cf6",
				"dweb:/ipfs/QmeQwwtUfYvYBmmzmSqCQNVfyHdvc2qBAENdMYKFG9xtcd"
			]
		},
		"resolvers/profiles/ContentHashResolver.sol": {
			"keccak256": "0x37c45443c33ec847be7586b52f9a53edaff255ac07c68e8cafa0a2d945083e50",
			"urls": [
				"bzz-raw://dbdc83209c7cbb279503eb69ea26db64c119146476e2404563b2a9761243f66e",
				"dweb:/ipfs/QmPo3yoWGGrHCR1SEDFuJqN4YKJJ9qgo1p8JGn6Yu7eCm4"
			]
		},
		"resolvers/profiles/InterfaceResolver.sol": {
			"keccak256": "0x7d413b7889b7efc433af3587026f2fce2f701be956b4193de7d5a69083d3e923",
			"urls": [
				"bzz-raw://90412df69ad97cb60f7fc1fca5a816ccf034ef6d6f0914d13678f806d74c74c0",
				"dweb:/ipfs/QmQYXgBGk82mdv196vpkkvGXGboY3v9vnXkNTtGWc5bMuV"
			]
		},
		"resolvers/profiles/NameResolver.sol": {
			"keccak256": "0x6f71dc88e15d2b2b1065f3b658f496b9bc7ce1fc91c02962c321fcb8dab77396",
			"urls": [
				"bzz-raw://b726c75d792e2ee8536b285e38f8f97b79342bf4c7d5ce6a95494d63ac3dd132",
				"dweb:/ipfs/QmeZTG6UjUPGFC2iskt7jqwfwfsnux8fHnGnFP3PHv3QWV"
			]
		},
		"resolvers/profiles/PubkeyResolver.sol": {
			"keccak256": "0x6e1aaad37d640e768a467c4cd3c1b4a8dbaccd04ccd2cb71476cf809869d388b",
			"urls": [
				"bzz-raw://dc4129376ced7a0d411a0f774a4a35da36f8ded08fd02696a928a46b1775ab41",
				"dweb:/ipfs/QmXNzVxVbtaFLt1aLvuPAguNdKo1cDtX4TkyGDZ9z7peCR"
			]
		},
		"resolvers/profiles/TextResolver.sol": {
			"keccak256": "0x63d5a0b100b01c9a93c4b411207a9ac991d4b015d4e96a7579770746b589f32e",
			"urls": [
				"bzz-raw://1d0aff398af5cfe16f223a240e5c959ee448ceedd2e4c565c94a4ca2f9800564",
				"dweb:/ipfs/QmYqQKzjNQ8QREidvwgVhxiAGj2aP2ZuLGGzZhatoBsdj3"
			]
		}
	},
	"version": 1
}